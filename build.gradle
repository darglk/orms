import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import nu.studer.gradle.jooq.JooqEdition
plugins {
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
	id 'nu.studer.jooq' version '8.2'
	id 'org.flywaydb.flyway' version '9.16.3'
}

group = 'com.darglk'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	flywayMigration
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
	jooqGenerator 'org.postgresql:postgresql:42.5.1'
	flywayMigration 'org.postgresql:postgresql:42.5.1'
	// https://mvnrepository.com/artifact/org.jooq/jooq-meta
	implementation 'org.jooq:jooq-meta:3.18.6'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// https://mvnrepository.com/artifact/org.keycloak/keycloak-admin-client
	implementation 'org.keycloak:keycloak-admin-client:22.0.4'
}

flyway {
	configurations = ['flywayMigration']
	url = 'jdbc:postgresql://localhost:5433/orms'
	user = 'orms'
	password = 'orms'
	schemas = ['orms']
}

jooq {
	version = '3.18.4'
	edition = JooqEdition.OSS

	configurations {
		main {
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'org.postgresql.Driver'
					url = 'jdbc:postgresql://localhost:5433/orms'
					user = 'orms'
					password = 'orms'
					properties {
						property {
							key = 'PAGE_SIZE'
							value = 2048
						}
					}
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase'
						forcedTypes {
							forcedType {
								name = 'varchar'
								includeExpression = '.*'
								includeTypes = 'JSONB?'
							}
							forcedType {
								name = 'varchar'
								includeExpression = '.*'
								includeTypes = 'INET'
							}
						}
					}
					generate {
						deprecated = false
						records = false
						immutablePojos = false
						fluentSetters = false
					}
					target {
						packageName = 'nu.studer.sample'
						directory = 'src/main/kotlin/entity/jooq'
					}
					strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
				}
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.modulith:spring-modulith-bom:1.0.0'
	}
}

tasks.named('generateJooq').configure {
	// ensure database schema has been prepared by Flyway before generating the jOOQ sources
	dependsOn tasks.named('flywayMigrate')

	// declare Flyway migration scripts as inputs on the jOOQ task
	inputs.files(fileTree('src/main/resources/db/migration'))
			.withPropertyName('migrations')
			.withPathSensitivity(PathSensitivity.RELATIVE)

	// make jOOQ task participate in incremental builds (and build caching)
	allInputsDeclared = true
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
